@model account_web.Models.Dtos.LoginDto

@{
  ViewData["Title"] = "登入";
  Layout = "_Layout";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-4">
            <div class="card shadow">
                <div class="card-header bg-primary text-white text-center">
                    <h4 class="mb-0">用戶登入</h4>
                </div>
                <div class="card-body">
                    <form id="loginForm" asp-action="Login" method="post">
                        <div asp-validation-summary="All" class="text-danger"></div>
                        
                        <div class="mb-3">
                            <label asp-for="UserId" class="form-label"></label>
                            <input asp-for="UserId" class="form-control" placeholder="請輸入您的帳號" />
                            <span asp-validation-for="UserId" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="Password" class="form-label"></label>
                            <input asp-for="Password" class="form-control" placeholder="請輸入您的密碼" />
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3 form-check">
                            <input asp-for="RememberMe" class="form-check-input" />
                            <label asp-for="RememberMe" class="form-check-label"></label>
                        </div>
                        
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">登入</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
  @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
  }
  <script>
    document.getElementById('loginForm').addEventListener('submit', async function (e) {
      e.preventDefault();

      const form = e.target;
      const formData = new FormData(form);
      const validationSummary = document.querySelector('[data-valmsg-summary="true"]');

      try {
        const response = await fetch(form.action, {
          method: form.method,
          body: new URLSearchParams(formData)
        });

        if (response.ok) {
          const result = await response.json();
          localStorage.setItem('jwt_token', result.token);
          // Redirect to a protected page, for example, the user dashboard
          window.location.href = '/Users'; // Or '/Auth/Dashboard' if you re-enable it
        } else {
          const errorText = await response.text();
          if (validationSummary) {
              validationSummary.innerHTML = '<ul><li>登入失敗，請檢查您的帳號和密碼。</li></ul>';
          }
        }
      } catch (error) {
        console.error('Login request failed:', error);
        if (validationSummary) {
            validationSummary.innerHTML = '<ul><li>登入請求失敗，請稍後再試。</li></ul>';
        }
      }
    });
  </script>
}